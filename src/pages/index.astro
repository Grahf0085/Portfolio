---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';
import { translations } from '../components/translations.js';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
    .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
    .slice(0, 4);

// Fallback to English ('en') as the default language
let language = 'en';  // This will change based on the toggle
let translation = translations[language] || {};
---

<BaseLayout>
    <div class="stack gap-20 lg:gap-48">
        <langage-toggle></langage-toggle>

        <div class="wrapper stack gap-8 lg:gap-20">
            <header class="hero">
                <Hero
                    title={translation?.title || 'Hello, my name is Jeanine White'}
                    tagline={translation?.tagline || 'I am a Creative Developer who is currently based in Portland, Oregon.'}
                    align="start"
                >
                    <div class="roles">
                        <Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
                        <Pill><Icon icon="microphone-stage" size="1.33em" /> Speaker</Pill>
                        <Pill><Icon icon="pencil-line" size="1.33em" /> Writer</Pill>
                    </div>
                </Hero>

                <img
                    alt="Jeanine White smiling in a red plaid shirt and tortoise shell glasses"
                    width="480"
                    height="620"
                    src="/assets/portrait.jpg"
                />
            </header>

            <Skills />
        </div>

        <main class="wrapper stack gap-20 lg:gap-48">
            <section class="section with-background with-cta">
                <header class="section-header stack gap-2 lg:gap-4">
                    <h3 id="selected-work-header">{translation?.selectedWorkHeader || 'Selected Work'}</h3>
                    <p id="selected-work-description">{translation?.selectedWorkDescription || 'Take a look below at some of my featured work for clients from the past few years.'}</p>
                </header>

                <div class="gallery">
                    <Grid variant="offset">
                        {projects.map((project) => (
                            <li>
                                <PortfolioPreview project={project} />
                            </li>
                        ))}
                    </Grid>
                </div>

                <div class="cta">
                    <CallToAction href="/work/">
                        View All
                        <Icon icon="arrow-right" size="1.2em" />
                    </CallToAction>
                </div>
            </section>

            <section class="section with-background bg-variant">
                <header class="section-header stack gap-2 lg:gap-4">
                    <h3 id="mentions-header">{translation?.mentionsHeader || 'Mentions'}</h3>
                    <p id="mentions-description">{translation?.mentionsDescription || 'I have been fortunate enough to receive praise for my work in several publications. Take a look below to learn more.'}</p>
                </header>

                <div class="gallery">
                    <Grid variant="small">
                        {['Medium', 'BuzzFeed', 'The Next Web', 'awwwards.', 'TechCrunch'].map((brand) => (
                            <li class="mention-card">
                                <p>{brand}</p>
                            </li>
                        ))}
                    </Grid>
                </div>
            </section>
        </main>

        <ContactCTA />
    </div>

	<script is:inline>
		// Define handleLanguageChange globally
		window.handleLanguageChange = (e) => {
			language = e.detail.isEnglish ? 'en' : 'fr';  // Update language state
			translation = translations[language] || {};  // Update the translation object

			// Update the content dynamically
			document.getElementById('selected-work-header').textContent = translation.selectedWorkHeader;
			document.getElementById('selected-work-description').textContent = translation.selectedWorkDescription;
			document.getElementById('mentions-header').textContent = translation.mentionsHeader;
			document.getElementById('mentions-description').textContent = translation.mentionsDescription;
		};

		// Attach the event listener to langage-toggle after it has been defined
		document.querySelector('langage-toggle').addEventListener('languagechange', handleLanguageChange);
	</script>

</BaseLayout>
