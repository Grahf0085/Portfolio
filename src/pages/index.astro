---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';

const projects = (await getCollection('work')).sort(
    (a, b) => a.data.id - b.data.id
).slice(0, 4);


---

<BaseLayout>
    <div class="stack gap-20 lg:gap-48">
        <div class="wrapper stack gap-8 lg:gap-20">
            <header class="hero">
                <Hero
                    title={' Title '}
                    tagline={' Tagline '}
                    align="start"
                >
                    <div class="roles">
                        <Pill><Icon icon="code" size="1.33em"/> Developer</Pill>
                        <Pill><Icon icon="microphone-stage" size="1.33em" /> Speaker</Pill>
                        <Pill><Icon icon="pencil-line" size="1.33em" /> Writer</Pill>
                    </div>
                </Hero>

                <img
                    alt="Jeanine White smiling in a red plaid shirt and tortoise shell glasses"
                    width="480"
                    height="620"
                    src="/assets/portrait.jpg"
                />
            </header>

            <Skills />
        </div>

        <main class="wrapper stack gap-20 lg:gap-48">
            <section class="section with-background with-cta">
                <header class="section-header stack gap-2 lg:gap-4">
                    <h3 id="selected-work-header">{' '}</h3>
                    <p id="selected-work-description">{' '}</p>
                </header>

                <div class="gallery">
                    <Grid variant="offset">
                        {projects.map((project) => (
                            <li>
                                <PortfolioPreview project={project} />
                            </li>
                        ))}
                    </Grid>
                </div>

                <div class="cta">
                    <CallToAction href="/work/">
                        View All
                        <Icon icon="arrow-right" size="1.2em" />
                    </CallToAction>
                </div>
            </section>
        </main>

        <ContactCTA />
    </div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: top;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 4.5rem;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>

<script type="module" is:inline>


    const translations = {
        en: {
		pagename: "Home | Julien Fabregoule",
        title: "Hello, my name is Julien Fabregoule",
        tagline: "I am a Video Game oriented Developer who is currently based in Lyon, France.",
		Skill1: "Developer",
		Skill1Desc: "Completed numerous programming projects with extensive experience in C, C++, and C#.",
		Skill2: "3D Real Time",
		Skill2Desc: "Worked on ambitious projects using Unity and gained hands-on experience with various real-time 3D engines such as Unreal and 3dverse.",
		Skill3: "Project Lead",
		Skill3Desc: "Experience in project management during my studies, leading teams of up to 17 people.",
        selectedWorkHeader: "Selected Work",
        selectedWorkDescription: "Take a look below at some of my featured work from the past few years.",
		callToAction: "View All",
		callToActionLong: "Interested in working together ?",
		footerText: "Designed & Developed in Lyon",
		footerCopyright: "2024 Julien Fabregoule"
        },
        fr: {
		pagename: "Accueil | Julien Fabregoule",
        title: "Bonjour, je m'appelle Julien Fabregoule",
        tagline: "Je suis un développeur orienté sur le Jeu Vidéo basé à Lyon, France.",
		Skill1: "Développeur",
		Skill1Desc: "Réalisation de nombreux projets de programmation avec une expérience poussée en C, C++ et C#.",
		Skill2: "3D Temps Réel",
		Skill2Desc: "Projets ambitieux sur Unity et prise en main de divers moteurs 3D temps réel comme Unreal ou 3dverse.",
		Skill3: "Lead Projet",
		Skill3Desc: "Expérience dans la gestion de projet au cours de mes études au sein d'équipes allant jusqu'à 17 personnes.",
        selectedWorkHeader: "Mes créations",
        selectedWorkDescription: "Découvrez ci-dessous quelques-unes de mes réalisations au cours des dernières années.",
		callToAction: "Voir Tout",
		callToActionLong: "Vous souhaitez travailler avec moi ?",
		footerText: "Designé & développé à Lyon",
		footerCopyright: "2024 Julien Fabregoule"
        }
    };

    let language = 'en';  // Langue par défaut
    let translation = translations[language] || {};

	document.getElementById('page-name').textContent = translation.pagename;
    document.getElementById('title').textContent = translation.title;
    document.getElementById('tagline').textContent = translation.tagline;
	document.getElementById('Skill1').textContent = translation.Skill1;
	document.getElementById('Skill1Desc').textContent = translation.Skill1Desc;
	document.getElementById('Skill2').textContent = translation.Skill2;
	document.getElementById('Skill2Desc').textContent = translation.Skill2Desc;
	document.getElementById('Skill3').textContent = translation.Skill3;
	document.getElementById('Skill3Desc').textContent = translation.Skill3Desc;
    document.getElementById('selected-work-header').textContent = translation.selectedWorkHeader;
    document.getElementById('selected-work-description').textContent = translation.selectedWorkDescription;
	document.getElementById('call-to-action').textContent = translation.callToAction;
	document.getElementById('call-to-action-long').textContent = translation.callToActionLong;
	document.getElementById('footer-text').textContent = translation.footerText;
	document.getElementById('footer-copyright').textContent = translation.footerCopyright;

    const handleLanguageChange = (e) => {
      language = e.detail.isEnglish ? 'fr' : 'en';
      translation = translations[language] || {};

      // Mise à jour dynamique du contenu
	document.getElementById('page-name').textContent = translation.pagename;
	document.getElementById('title').textContent = translation.title;
	document.getElementById('tagline').textContent = translation.tagline;
	document.getElementById('Skill1').textContent = translation.Skill1;
	document.getElementById('Skill1Desc').textContent = translation.Skill1Desc;
	document.getElementById('Skill2').textContent = translation.Skill2;
	document.getElementById('Skill2Desc').textContent = translation.Skill2Desc;
	document.getElementById('Skill3').textContent = translation.Skill3;
	document.getElementById('Skill3Desc').textContent = translation.Skill3Desc;
	document.getElementById('selected-work-header').textContent = translation.selectedWorkHeader;
	document.getElementById('selected-work-description').textContent = translation.selectedWorkDescription;
	document.getElementById('call-to-action').textContent = translation.callToAction;
	document.getElementById('call-to-action-long').textContent = translation.callToActionLong;
	document.getElementById('footer-text').textContent = translation.footerText;
	document.getElementById('footer-copyright').textContent = translation.footerCopyright;
    };

    // Attacher l'écouteur d'événements après que le composant est défini
    document.querySelector('langage-toggle').addEventListener('languagechange', handleLanguageChange);
  </script>
