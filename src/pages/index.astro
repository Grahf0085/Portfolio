---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
    .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
    .slice(0, 4);

---

<BaseLayout>
    <div class="stack gap-20 lg:gap-48">
        <langage-toggle></langage-toggle>

        <div class="wrapper stack gap-8 lg:gap-20">
            <header class="hero">
                <Hero
                    title={'Hello, my name is Jeanine White'}
                    tagline={'I am a Creative Developer who is currently based in Portland, Oregon.'}
                    align="start"
                >
                    <div class="roles">
                        <Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
                        <Pill><Icon icon="microphone-stage" size="1.33em" /> Speaker</Pill>
                        <Pill><Icon icon="pencil-line" size="1.33em" /> Writer</Pill>
                    </div>
                </Hero>

                <img
                    alt="Jeanine White smiling in a red plaid shirt and tortoise shell glasses"
                    width="480"
                    height="620"
                    src="/assets/portrait.jpg"
                />
            </header>

            <Skills />
        </div>

        <main class="wrapper stack gap-20 lg:gap-48">
            <section class="section with-background with-cta">
                <header class="section-header stack gap-2 lg:gap-4">
                    <h3 id="selected-work-header">{'Selected Work'}</h3>
                    <p id="selected-work-description">{'Take a look below at some of my featured work for clients from the past few years.'}</p>
                </header>

                <div class="gallery">
                    <Grid variant="offset">
                        {projects.map((project) => (
                            <li>
                                <PortfolioPreview project={project} />
                            </li>
                        ))}
                    </Grid>
                </div>

                <div class="cta">
                    <CallToAction href="/work/">
                        View All
                        <Icon icon="arrow-right" size="1.2em" />
                    </CallToAction>
                </div>
            </section>

            <section class="section with-background bg-variant">
                <header class="section-header stack gap-2 lg:gap-4">
                    <h3 id="mentions-header">{'Mentions'}</h3>
                    <p id="mentions-description">{'I have been fortunate enough to receive praise for my work in several publications. Take a look below to learn more.'}</p>
                </header>

                <div class="gallery">
                    <Grid variant="small">
                        {['Medium', 'BuzzFeed', 'The Next Web', 'awwwards.', 'TechCrunch'].map((brand) => (
                            <li class="mention-card">
                                <p>{brand}</p>
                            </li>
                        ))}
                    </Grid>
                </div>
            </section>
        </main>

        <ContactCTA />
    </div>
</BaseLayout>

<script type="module" is:inline>

    const translations = {
        en: {
        title: "Hello, my name is Jeanine Whitessssssssssssssssss",
        tagline: "I am a Creative Developer who is currently based in Portland, Oregon.",
        selectedWorkHeader: "Selected Work",
        selectedWorkDescription: "Take a look below at some of my featured work for clients from the past few years.",
        mentionsHeader: "Mentions",
        mentionsDescription: "I have been fortunate enough to receive praise for my work in several publications. Take a look below to learn more.",
        },
        fr: {
        title: "Bonjour, je m'appelle Jeanine White",
        tagline: "Je suis une développeuse créative basée à Portland, Oregon.",
        selectedWorkHeader: "Travail Sélectionné",
        selectedWorkDescription: "Découvrez ci-dessous quelques-unes de mes réalisations pour des clients au cours des dernières années.",
        mentionsHeader: "Mentions",
        mentionsDescription: "J'ai eu la chance de recevoir des éloges pour mon travail dans plusieurs publications. Découvrez ci-dessous pour en savoir plus.",
        }
    };

    let language = 'en';  // Langue par défaut
    let translation = translations[language] || {};

    document.getElementById('title').textContent = translation.title;
    document.getElementById('tagline').textContent = translation.tagline;
    document.getElementById('selected-work-header').textContent = translation.selectedWorkHeader;
    document.getElementById('selected-work-description').textContent = translation.selectedWorkDescription;
    document.getElementById('mentions-header').textContent = translation.mentionsHeader;
    document.getElementById('mentions-description').textContent = translation.mentionsDescription;
  
    const handleLanguageChange = (e) => {
      language = e.detail.isEnglish ? 'en' : 'fr';  // Mise à jour de la langue
      translation = translations[language] || {};  // Mise à jour des traductions
  
      // Mise à jour dynamique du contenu
      document.getElementById('title').textContent = translation.title;
      document.getElementById('tagline').textContent = translation.tagline;
      document.getElementById('selected-work-header').textContent = translation.selectedWorkHeader;
      document.getElementById('selected-work-description').textContent = translation.selectedWorkDescription;
      document.getElementById('mentions-header').textContent = translation.mentionsHeader;
      document.getElementById('mentions-description').textContent = translation.mentionsDescription;
    };
  
    // Attacher l'écouteur d'événements après que le composant est défini
    document.querySelector('langage-toggle').addEventListener('languagechange', handleLanguageChange);
  </script>
